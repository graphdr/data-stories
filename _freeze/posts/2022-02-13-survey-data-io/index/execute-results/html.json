{
  "hash": "670e4d903d36663565c38dbda0bf658e",
  "result": {
    "markdown": "---\ntitle: \"Survey data I/O with likert\"\ndescription: |\n  How to prepare different forms of Likert-style survey data for the R likert package and edit the results to create 100% stacked-bar charts. \ndate: 2022-02-13\ndraft: false\ncategories: [R]\n---\n\n\n\n\n> Summary. Given Likert-style survey data in one of three common forms, I shape the data to suit the input requirements of the likert R package and use the output to create 100% stacked-bar charts. In each case, I illustrate two routine revision tasks: editing the question labels on the bars and editing the opinion levels in the legend.\n\nThis post is a tutorial on how to prepare different forms of Likert-style survey data for the R likert package and using its output to create  100% stacked-bar charts. I focus on preparing the data for `likert()` input and editing its output for the final chart. For exploring the package functionality  more fully, I recommend the tutorials by Laura Mudge [-@Mudge:2019] and Jake Chanenson  [-@Chanenson:2021].\n\nIn a [companion post](https://graphdr.github.io/data-stories/posts/2022-02-12-survey-data-chart-designs/) I develop the R script for constructing the 100% stacked-bar chart and discuss the rationale for selecting it as a more  effective design for Likert-style survey data. \n\nI use data.table, ggplot2, and likert R packages. An appealing feature of likert is its compatibility with data.table and ggplot2 functionality. Note that to reproduce this work, likert must be at least version 1.3.6 (currently the development version). \n\nThe R code for the post is listed under the \"R code\" pointers. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages\nlibrary(\"data.table\")\nlibrary(\"ggplot2\")\nlibrary(\"likert\")\n\n# function based on likert.plot to construct a 100% stacked bar chart \nmy_breaks <- seq(-100, 100, 10)\nlikert_100_pct_bar <- function(likert_list) {\n  plot(likert_list, \n       plot.percent.neutral = FALSE,\n       plot.percent.high = FALSE,\n       plot.percent.low = FALSE,\n       neutral.color = \"grey90\", \n       include.center = TRUE, \n       centered = FALSE) +\n    geom_hline(yintercept = my_breaks, color = \"white\", size = 0.25) +\n    scale_y_continuous(limits = c(0, 100), \n                       breaks = my_breaks, \n                       sec.axis = sec_axis( # second scale\n                         trans = function(z) z - 100, \n                         breaks = my_breaks, \n                         labels = as.character(abs(my_breaks)))) +\n    theme(panel.background = element_blank(),\n          legend.key.size = unit(4, \"mm\"),\n          legend.title = element_blank(),\n          axis.ticks = element_blank(), \n          legend.justification = 0.5, \n          legend.position = \"top\")\n}\n\n# labeling vectors\nopinion_labels <- c(\"Strongly Disagree\", \n                    \"Disagree\", \n                    \"Neutral\", \n                    \"Agree\", \n                    \"Strongly Agree\")\n\nquestion_labels <- c(\"Beyond the content\", \n                     \"Analyze errors\", \n                     \"Provide facts\", \n                     \"Develop writing\", \n                     \"Independent learning\")\n\n# functions for renaming columns\nsetnames_Item <- function(x) {\n  setnames(x, old = \"q_no\", new = \"Item\", skip_absent = TRUE)\n}\n\nsetnames_opinion_labels <- function(x) {\n  setnames(x, \n           old = c(\"str_disagree\", \n                   \"disagree\", \n                   \"neutral\", \n                   \"agree\", \n                   \"str_agree\"), \n           new = opinion_labels, \n           skip_absent = TRUE)\n}\n```\n:::\n\n\n\n\n\n\n\n## Data\n\nThe practice data in my example are from an engineering education article by Ashanthi Maxworth [-@Maxworth:2021], selected because the data are compact and the survey includes a Neutral option. The table from the original article is shown below. There were 31 respondents. \n\n![(Original Table 3) Percentage student responses for each question in the feedback form.](survey-data.png)\n\nSurvey data are most likely to be reported in one of three forms: summary percentages (as above), summary counts, or row-records. The `likert()` function accepts any of these forms as input. The practice data, in all three forms, are available in the [blog post  directory](https://github.com/graphdr/data-stories/tree/main/posts/2022-02-13-survey-data-io) in CSV files.  \n\n- summary counts: `case-study-2021-count.csv` \n- summary percentages: `case-study-2021-percent.csv` \n- row-records: `case-study-2021-row-record.csv` \n    \n\n\n\n\n\n\n\n## Summary counts\n\nRead the prepared data file in summary count form.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read prepared data\ndt <- fread(\"case-study-2021-count.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(dt)\n```\n\n::: {.cell-output-display}\n|q_no | str_disagree| disagree| neutral| agree| str_agree|\n|:----|------------:|--------:|-------:|-----:|---------:|\n|Q1   |            2|        0|       8|    12|         9|\n|Q2   |            2|        2|       7|    14|         6|\n|Q3   |            1|        1|       5|     9|        15|\n|Q4   |            0|        2|      10|    12|         7|\n|Q5   |            2|        0|       6|    11|        12|\n:::\n:::\n\n\n\n### `likert()` input \n\nI rename the first column `Item` for consistency with the `likert()` function. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rename first column\nsetnames_Item(dt)\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Item str_disagree disagree neutral agree str_agree\n   <char>        <int>    <int>   <int> <int>     <int>\n1:     Q1            2        0       8    12         9\n2:     Q2            2        2       7    14         6\n3:     Q3            1        1       5     9        15\n4:     Q4            0        2      10    12         7\n5:     Q5            2        0       6    11        12\n```\n:::\n:::\n\n\nThe `likert()` function accepts input data frames having this structure. The salient characteristics are: \n\n- one row per question \n- first column is named `Item` and contains the question labels\n- remaining columns are named for the opinion levels in increasing order left to right\n- column values are the counts of respondents choosing that option \n- the sum of row counts is the number of respondents answering that question \n\n\n### `likert()` output \n\nTo operate on this data frame, we assign it to the `summary` argument of the `likert()` function. The result is a list of various statistics about the Likert-style data. Note that the `results` output preserves the data.table structure of the input. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create the likert list\nlikert_list <- likert(summary = dt)\n\n# examine its structure\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item        : chr [1:5] \"Q1\" \"Q2\" \"Q3\" \"Q4\" ...\n  ..$ str_disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ disagree    : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ neutral     : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ agree       : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ str_agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   : NULL\n $ grouping: NULL\n $ nlevels : num 5\n $ levels  : chr [1:5] \"str_disagree\" \"disagree\" \"neutral\" \"agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n:::\n\n\nThe components of the list are:\n\n`results` \n: Data frame. Percentage of responses by question, opinion level, and group.\n\n`items` \n: Data frame. Copy of original row-record input (NULL in this example).\n\n`grouping` \n: Copy of original grouping vector that subsets results (NULL in this example).\n\n`nlevels` \n: Integer. Number of opinion levels used in the calculations.\n\n`levels` \n: Character. Ordered vector of opinion level labels. \n\n<br>\n\n\n\n\n\n\n\n### Basic chart\n\nTo use this list to create a chart, we assign it as the first argument of the `plot()` function.  \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the basic chart (default digits = 0 throws an error)\nplot(likert_list, digits = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n### 100% stacked bar chart\n\nThe same list can be used to create a 100% stacked-bar chart by assigning it as the first argument of `likert_100_pct_bar()`---a function (defined at the top of the post) that wraps `likert.plot` and sets the likert arguments and ggplot2 functions that produce my preferred design.  \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# customize the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n### Legend key \n\nThe legend key is edited via the column names of `likert_list$results`.  Viewing its column names, \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(likert_list$results)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Item\"         \"str_disagree\" \"disagree\"     \"neutral\"      \"agree\"       \n[6] \"str_agree\"   \n```\n:::\n:::\n\n\nUsing a vector of opinion labels defined at the top of the post, I rename the opinion columns of the data frame.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# recode the opinion options \nsetnames_opinion_labels(likert_list$results)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Q1\" \"Q2\" \"Q3\" \"Q4\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   : NULL\n $ grouping: NULL\n $ nlevels : num 5\n $ levels  : chr [1:5] \"str_disagree\" \"disagree\" \"neutral\" \"agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n:::\n\n\nThe change can be seen in the structure above and in the revised figure.  \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n### Question labels \n\nThe question labels are edited via the values in the `Item` column of `likert_list$results`. Viewing the first column in vector form, \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlikert_list$results[[\"Item\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Q1\" \"Q2\" \"Q3\" \"Q4\" \"Q5\"\n```\n:::\n:::\n\n\nUsing a vector of question labels defined at the top of the post, I substitute them for the values in the original `Item` column. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# recode the question labels\nlikert_list$results[, Item := question_labels]\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Beyond the content\" \"Analyze errors\" \"Provide facts\" \"Develop writing\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   : NULL\n $ grouping: NULL\n $ nlevels : num 5\n $ levels  : chr [1:5] \"str_disagree\" \"disagree\" \"neutral\" \"agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n:::\n\n\nAgain, the change is seen in the structure above and in the revised figure.  \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThis approach is somewhat ad-hoc, but works as long as you are careful to write the substitutions in the correct order. If I were programming these steps, I would create additional tables (as in a database) and join the substitutions by clearly assigned key variables. \n\n\n\n\n\n\n\n\n\n### Or edit the labels first \n\nAlternatively one can produce the same result by editing the opinion labels and question labels of the initial data frame before submitting it to `likert()`. The row and column structure reflects the changes.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read prepared data\ndt <- fread(\"case-study-2021-count.csv\")\n\n# rename columns\nsetnames_Item(dt)\nsetnames_opinion_labels(dt)\n\n# recode the question labels\ndt[, Item := question_labels]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Item Strongly Disagree Disagree Neutral Agree Strongly Agree\n                 <char>             <int>    <int>   <int> <int>          <int>\n1:   Beyond the content                 2        0       8    12              9\n2:       Analyze errors                 2        2       7    14              6\n3:        Provide facts                 1        1       5     9             15\n4:      Develop writing                 0        2      10    12              7\n5: Independent learning                 2        0       6    11             12\n```\n:::\n:::\n\n\nThe likert list that results is nearly identical to the previous version except the `levels` vector uses the new opinion labels.\n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the likert list\nlikert_list <- likert(summary = dt)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Beyond the content\" \"Analyze errors\" \"Provide facts\" \"Develop writing\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   : NULL\n $ grouping: NULL\n $ nlevels : num 5\n $ levels  : chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Summary percentages\n\nRead the prepared data file in summary percentage form. The percentages are directly from the table in the source article.  Like before, I rename the first column `Item` for consistency with the `likert()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read prepared data\ndt <- fread(\"case-study-2021-percent.csv\")\n\n# rename first column\nsetnames_Item(dt)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|Item | str_disagree| disagree| neutral| agree| str_agree|\n|:----|------------:|--------:|-------:|-----:|---------:|\n|Q1   |          6.5|      0.0|    25.8|  38.7|      29.0|\n|Q2   |          6.5|      6.5|    22.6|  45.2|      19.4|\n|Q3   |          3.2|      3.2|    16.1|  29.0|      48.4|\n|Q4   |          0.0|      6.5|    32.3|  38.7|      22.6|\n|Q5   |          6.5|      0.0|    19.4|  35.5|      38.7|\n:::\n:::\n\n\n\n\n\n\n\n\n\n### Option 1: Convert percentages to counts\n\nThis option is the most direct approach, assuming we know  the number of respondents to each question. In this example we do (though this is not always the case). In this case study we have 31 respondents and all respondents replied to all the questions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# number of respondents in this example\nN_respondents <- 31\n\n# identify the numeric columns\nsel_cols <- names(dt)[sapply(dt, is.numeric)]\n\n# convert percentages to integer counts\ndt[, c(sel_cols) := lapply(.SD, function(x) round(N_respondents * x/100, 0)), .SDcols = sel_cols]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(dt)\n```\n\n::: {.cell-output-display}\n|Item | str_disagree| disagree| neutral| agree| str_agree|\n|:----|------------:|--------:|-------:|-----:|---------:|\n|Q1   |            2|        0|       8|    12|         9|\n|Q2   |            2|        2|       7|    14|         6|\n|Q3   |            1|        1|       5|     9|        15|\n|Q4   |            0|        2|      10|    12|         7|\n|Q5   |            2|        0|       6|    11|        12|\n:::\n:::\n\n\nThis data structure is identical to the one we worked with in the previous section, so we know how to work with it. \n\n\n\n\n\n\n\n\n### Option 2: Use percentages as-is\n\nThis option might be necessary if we do not know the number of respondents replying to each question. Start by reading the data file and again rename the first column `Item` for consistency with the likert() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read prepared data\ndt <- fread(\"case-study-2021-percent.csv\")\n\n# rename first column\nsetnames_Item(dt)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|Item | str_disagree| disagree| neutral| agree| str_agree|\n|:----|------------:|--------:|-------:|-----:|---------:|\n|Q1   |          6.5|      0.0|    25.8|  38.7|      29.0|\n|Q2   |          6.5|      6.5|    22.6|  45.2|      19.4|\n|Q3   |          3.2|      3.2|    16.1|  29.0|      48.4|\n|Q4   |          0.0|      6.5|    32.3|  38.7|      22.6|\n|Q5   |          6.5|      0.0|    19.4|  35.5|      38.7|\n:::\n:::\n\n\nWith one row per question, the row percentages should sum to 100%. They do, but with an error due to rounding in the reported percentages. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check row totals of numeric columns\nsel_cols <- names(dt)[sapply(dt, is.numeric)]\nrow_sum  <- rowSums(dt[, .SD, .SDcols = sel_cols])\n\n# examine result\ndt[, row_total := row_sum]\ndt[, rounding_error := row_sum - 100]\ndt[, .(Item, row_total, rounding_error)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Item row_total rounding_error\n   <char>     <num>          <num>\n1:     Q1     100.0            0.0\n2:     Q2     100.2            0.2\n3:     Q3      99.9           -0.1\n4:     Q4     100.1            0.1\n5:     Q5     100.1            0.1\n```\n:::\n:::\n\n\nIf we ignore the rounding error, it can introduce small but noticeable errors in the bar lengths in the chart. A simple remediation is to subtract the small errors from the neutral columns so that all rows sum to 100% exactly. The adjusted Neutrals are shown below. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# subtract error from neutral\ndt[, adjusted_neutral := neutral - rounding_error]\n\n# examine the result\ndt[, .(Item, neutral, rounding_error, adjusted_neutral)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Item neutral rounding_error adjusted_neutral\n   <char>   <num>          <num>            <num>\n1:     Q1    25.8            0.0             25.8\n2:     Q2    22.6            0.2             22.4\n3:     Q3    16.1           -0.1             16.2\n4:     Q4    32.3            0.1             32.2\n5:     Q5    19.4            0.1             19.3\n```\n:::\n:::\n\n\n\n\n\n### `likert()` input \n\nReplacing neutral with the adjusted neutral and deleting the temporary information columns yields the data structure I need for the summary percentage form:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjust neutral\ndt[, neutral := adjusted_neutral]\n\n# delete temporary information columns\ndt[, c(\"row_total\", \"rounding_error\", \"adjusted_neutral\") := NULL]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Item str_disagree disagree neutral agree str_agree\n   <char>        <num>    <num>   <num> <num>     <num>\n1:     Q1          6.5      0.0    25.8  38.7      29.0\n2:     Q2          6.5      6.5    22.4  45.2      19.4\n3:     Q3          3.2      3.2    16.2  29.0      48.4\n4:     Q4          0.0      6.5    32.2  38.7      22.6\n5:     Q5          6.5      0.0    19.3  35.5      38.7\n```\n:::\n:::\n\n\nData structure:\n\n- one row per question \n- first column is named `Item` and contains the question labels\n- remaining columns are named for the opinion levels in increasing order left to right\n- column values are the percentages of respondents choosing that option \n- the sum of row percentages is exactly 100% \n\nTo prepare the data frame for graphing, I use the \"edit the labels first\" approach described earlier.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# recode the opinion options\nsetnames_opinion_labels(dt)\n\n# recode the question labels\ndt[, Item := question_labels]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Item Strongly Disagree Disagree Neutral Agree Strongly Agree\n                 <char>             <num>    <num>   <num> <num>          <num>\n1:   Beyond the content               6.5      0.0    25.8  38.7           29.0\n2:       Analyze errors               6.5      6.5    22.4  45.2           19.4\n3:        Provide facts               3.2      3.2    16.2  29.0           48.4\n4:      Develop writing               0.0      6.5    32.2  38.7           22.6\n5: Independent learning               6.5      0.0    19.3  35.5           38.7\n```\n:::\n:::\n\n\n\n\n### `likert()` output \n\nTo operate on this data frame, we again use the `summary` argument of `likert()`. The result is a list similar to that produced when we operated on summary counts and the same familiar chart. \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the likert list\nlikert_list <- likert(summary = dt)\n\n# examine its structure\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 5\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Beyond the content\" \"Analyze errors\" \"Provide facts\" \"Develop writing\" ...\n  ..$ Strongly Disagree: num [1:5] 6.5 6.5 3.2 0 6.5\n  ..$ Disagree         : num [1:5] 0 6.5 3.2 6.5 0\n  ..$ Neutral          : num [1:5] 25.8 22.4 16.2 32.2 19.3\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   : NULL\n $ grouping: NULL\n $ nlevels : num 5\n $ levels  : chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n\n```{.r .cell-code}\n# 100% stacked bar chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Row records \n\nIn row-record form, everything we want to know about an individual is in one row, that is, a row-record for that individual. Thus the number of rows equals the number of respondents.  \n\nI made up a practice data set in row-record form with 31 rows and 6 columns. These are fictitious data I designed specifically to have the same summary characteristics as the published summary data used earlier.  \n\nRead the prepared data file in row-record form and view the data frame. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read observed data\ndt <- fread(\"case-study-2021-row-record.csv\")\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      obs    Q1    Q2    Q3    Q4    Q5\n    <int> <int> <int> <int> <int> <int>\n 1:     1     3     4     3     4     4\n 2:     2     5     1     5     3     5\n 3:     3     5     5     4     5     4\n 4:     4     3     4     5     4     5\n 5:     5     4     4     5     2     4\n 6:     6     4     3     5     3     4\n---                                    \n26:    26     5     5     5     4     5\n27:    27     5     2     3     4     1\n28:    28     3     4     5     3     5\n29:    29     3     3     4     3     4\n30:    30     4     4     5     3     1\n31:    31     4     4     5     5     5\n```\n:::\n:::\n\n\nThe first column is a fictitious respondent ID. The remaining columns represent responses to the survey questions. For basic charts like those shown here, all columns should be question responses, so I delete the ID. Though I don't cover it here, additional non-question columns are allowed for grouping the results. See, for example, [@Mudge:2019]. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# delete the ID column\ndt[, obs := NULL]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Q1    Q2    Q3    Q4    Q5\n    <int> <int> <int> <int> <int>\n 1:     3     4     3     4     4\n 2:     5     1     5     3     5\n 3:     5     5     4     5     4\n 4:     3     4     5     4     5\n 5:     4     4     5     2     4\n 6:     4     3     5     3     4\n---                              \n26:     5     5     5     4     5\n27:     5     2     3     4     1\n28:     3     4     5     3     5\n29:     3     3     4     3     4\n30:     4     4     5     3     1\n31:     4     4     5     5     5\n```\n:::\n:::\n\n\n\n\n\n\n\n### `likert()` input\n\nFor the `likert()` function to accept data in this form, all question response columns must be factors with identical sets of levels. Reformatting the columns and checking the structure yields,  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# reformat columns as factors\nsel_cols <- names(dt)\ndt[, c(sel_cols) := lapply(.SD, function(x) factor(x, levels = 1:5)), .SDcols = sel_cols]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Q1     Q2     Q3     Q4     Q5\n    <fctr> <fctr> <fctr> <fctr> <fctr>\n 1:      3      4      3      4      4\n 2:      5      1      5      3      5\n 3:      5      5      4      5      4\n 4:      3      4      5      4      5\n 5:      4      4      5      2      4\n 6:      4      3      5      3      4\n---                                   \n26:      5      5      5      4      5\n27:      5      2      3      4      1\n28:      3      4      5      3      5\n29:      3      3      4      3      4\n30:      4      4      5      3      1\n31:      4      4      5      5      5\n```\n:::\n:::\n\n\nInput data structure\n\n- One row per respondent. The number of rows equals the number of respondents.\n- One column per question. The column name is the question label. The number of columns equals the number of survey questions.  \n- Each column is a factor with an identical set of levels. The number of levels equals the number of answer options in the survey. \n- Column values are the encoded opinions of the respondent: 1 (Strongly Disagree), 2 (Disagree), 3 (Neutral), etc. \n\n\n\n\n\n\n\n### `likert()` output\n\nTo operate on a row-record data frame, we assign it to the `items` argument of the `likert()` function. The result is again a list. \n\nHowever, unlike the previous output lists, the data.table structure of the input has not been preserved. I use data.table syntax in subsequent operations, so I convert both `results` and `items` to data.tables. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create likert list \nlikert_list <- likert(items = dt)\n\n# convert output data frames to data.tables\nsetDT(likert_list$results)\nsetDT(likert_list$items)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 6\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item: chr [1:5] \"Q1\" \"Q2\" \"Q3\" \"Q4\" ...\n  ..$ 1   : num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ 2   : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ 3   : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ 4   : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ 5   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   :Classes 'data.table' and 'data.frame':\t31 obs. of  5 variables:\n  ..$ Q1: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 5 3 4 4 3 1 4 5 ...\n  ..$ Q2: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 1 5 4 4 3 2 5 5 4 ...\n  ..$ Q3: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 4 5 5 5 4 4 4 5 ...\n  ..$ Q4: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 3 5 4 2 3 4 3 5 5 ...\n  ..$ Q5: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 5 4 5 4 4 4 3 4 3 ...\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ grouping: NULL\n $ factors : NULL\n $ nlevels : int 5\n $ levels  : chr [1:5] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n:::\n\n\nThe components of the list are:    \n\n`results` \n: Data frame. Percentage of responses by question, opinion level, and group.\n\n`items` \n: Data frame. Copy of original row-record input.\n\n`grouping` \n: Copy of original grouping vector that subsets results (NULL in this example).\n\n`factors` \n: Copy of original vector matching columns to factors (NULL in this example).\n\n`nlevels` \n: Integer. Number of opinion levels used in the calculations. \n\n`levels` \n: Character. Ordered vector of opinion level labels. \n\n\n\n\n\n\n\n\n### Draft chart\n\nWith row-record data, the plot function requires both `results` and `items` from the output list. The chart is familiar, but the opinion labels are now the integers used to encode the survey results. \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n### Legend key\n\nAs before, the legend key is edited via the column names of `likert_list$results`. Note the corresponding changes in the likert list and chart. \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# recode the opinion options\nsetnames(likert_list$results, \n         old = as.character(1:5), \n         new = opinion_labels, \n         skip_absent = TRUE)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 6\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Q1\" \"Q2\" \"Q3\" \"Q4\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   :Classes 'data.table' and 'data.frame':\t31 obs. of  5 variables:\n  ..$ Q1: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 5 3 4 4 3 1 4 5 ...\n  ..$ Q2: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 1 5 4 4 3 2 5 5 4 ...\n  ..$ Q3: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 4 5 5 5 4 4 4 5 ...\n  ..$ Q4: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 3 5 4 2 3 4 3 5 5 ...\n  ..$ Q5: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 5 4 5 4 4 4 3 4 3 ...\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ grouping: NULL\n $ factors : NULL\n $ nlevels : int 5\n $ levels  : chr [1:5] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n### Question labels \n\nWith row-record data, both `results` and `items` data frames must be revised to edit the question labels. Note the corresponding changes in the likert list and chart.\n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# recode Item column of $results\nlikert_list$results[, Item := question_labels]\n\n# recode column names of $items\nsetnames(likert_list$items, \n         old = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\"), \n         new = question_labels, \n         skip_absent = TRUE)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 6\n $ results :Classes 'data.table' and 'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Beyond the content\" \"Analyze errors\" \"Provide facts\" \"Develop writing\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ items   :Classes 'data.table' and 'data.frame':\t31 obs. of  5 variables:\n  ..$ Beyond the content  : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 5 3 4 4 3 1 4 5 ...\n  ..$ Analyze errors      : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 1 5 4 4 3 2 5 5 4 ...\n  ..$ Provide facts       : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 3 5 4 5 5 5 4 4 4 5 ...\n  ..$ Develop writing     : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 3 5 4 2 3 4 3 5 5 ...\n  ..$ Independent learning: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 4 5 4 5 4 4 4 3 4 3 ...\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ grouping: NULL\n $ factors : NULL\n $ nlevels : int 5\n $ levels  : chr [1:5] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n### Or edit the labels first\n\nAs before, we have an alternative approach: one can produce the same result by editing the opinion labels and question labels of the data frame before submitting it to likert(). Question labels are substituted for the column names. Opinion levels (as text) are substituted for the encoded integers, i.e., 1 = Strongly Disagree through 5 = Strongly Agree.\n\nTo illustrate, I start with a fresh row-record data set. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read prepared data\ndt <- fread(\"case-study-2021-row-record.csv\")\n\n# delete the ID column\ndt <- subset(dt, select = -c(obs))\n\n# recode the question labels in the column names\nsetnames(dt, \n         old = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\"), \n         new = question_labels, \n         skip_absent = TRUE)\n\n# recode integer values with opinion options  \nsel_cols <- names(dt)\ndt[, (sel_cols) := lapply(.SD, function(x) fcase(\n  x == 1, opinion_labels[1],\n  x == 2, opinion_labels[2],\n  x == 3, opinion_labels[3],\n  x == 4, opinion_labels[4],\n  x == 5, opinion_labels[5])),\n  .SDcols = sel_cols]\n\n# convert columns to factors  \ndt <- dt[, lapply(.SD, function(x) factor(x, levels = opinion_labels)), .SDcols = sel_cols]\n\n# examine the result\ndt[]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Beyond the content    Analyze errors  Provide facts Develop writing\n                <fctr>            <fctr>         <fctr>          <fctr>\n 1:            Neutral             Agree        Neutral           Agree\n 2:     Strongly Agree Strongly Disagree Strongly Agree         Neutral\n 3:     Strongly Agree    Strongly Agree          Agree  Strongly Agree\n 4:            Neutral             Agree Strongly Agree           Agree\n 5:              Agree             Agree Strongly Agree        Disagree\n 6:              Agree           Neutral Strongly Agree         Neutral\n---                                                                    \n26:     Strongly Agree    Strongly Agree Strongly Agree           Agree\n27:     Strongly Agree          Disagree        Neutral           Agree\n28:            Neutral             Agree Strongly Agree         Neutral\n29:            Neutral           Neutral          Agree         Neutral\n30:              Agree             Agree Strongly Agree         Neutral\n31:              Agree             Agree Strongly Agree  Strongly Agree\n    Independent learning\n                  <fctr>\n 1:                Agree\n 2:       Strongly Agree\n 3:                Agree\n 4:       Strongly Agree\n 5:                Agree\n 6:                Agree\n---                     \n26:       Strongly Agree\n27:    Strongly Disagree\n28:       Strongly Agree\n29:                Agree\n30:    Strongly Disagree\n31:       Strongly Agree\n```\n:::\n:::\n\n\nInput to `likert()` produces the familiar chart. \n\n\n::: {.cell fig.asp='0.35'}\n\n```{.r .cell-code}\n# create the likert list\nlikert_list <- likert(items = dt)\n\n# examine the result\nstr(likert_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 6\n $ results :'data.frame':\t5 obs. of  6 variables:\n  ..$ Item             : chr [1:5] \"Beyond the content\" \"Analyze errors\" \"Provide facts\" \"Develop writing\" ...\n  ..$ Strongly Disagree: num [1:5] 6.45 6.45 3.23 0 6.45\n  ..$ Disagree         : num [1:5] 0 6.45 3.23 6.45 0\n  ..$ Neutral          : num [1:5] 25.8 22.6 16.1 32.3 19.4\n  ..$ Agree            : num [1:5] 38.7 45.2 29 38.7 35.5\n  ..$ Strongly Agree   : num [1:5] 29 19.4 48.4 22.6 38.7\n $ items   :'data.frame':\t31 obs. of  5 variables:\n  ..$ Beyond the content  : Factor w/ 5 levels \"Strongly Disagree\",..: 3 5 5 3 4 4 3 1 4 5 ...\n  ..$ Analyze errors      : Factor w/ 5 levels \"Strongly Disagree\",..: 4 1 5 4 4 3 2 5 5 4 ...\n  ..$ Provide facts       : Factor w/ 5 levels \"Strongly Disagree\",..: 3 5 4 5 5 5 4 4 4 5 ...\n  ..$ Develop writing     : Factor w/ 5 levels \"Strongly Disagree\",..: 4 3 5 4 2 3 4 3 5 5 ...\n  ..$ Independent learning: Factor w/ 5 levels \"Strongly Disagree\",..: 4 5 4 5 4 4 4 3 4 3 ...\n $ grouping: NULL\n $ factors : NULL\n $ nlevels : int 5\n $ levels  : chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ...\n - attr(*, \"class\")= chr \"likert\"\n```\n:::\n\n```{.r .cell-code}\n# create the chart\nlikert_100_pct_bar(likert_list)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n### Data table\n\nThe `results` component can also be used to construct a summary data table. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlikert_list$results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  Item Strongly Disagree Disagree  Neutral    Agree\n1   Beyond the content          6.451613 0.000000 25.80645 38.70968\n2       Analyze errors          6.451613 6.451613 22.58065 45.16129\n3        Provide facts          3.225806 3.225806 16.12903 29.03226\n4      Develop writing          0.000000 6.451613 32.25806 38.70968\n5 Independent learning          6.451613 0.000000 19.35484 35.48387\n  Strongly Agree\n1       29.03226\n2       19.35484\n3       48.38710\n4       22.58065\n5       38.70968\n```\n:::\n:::\n\n\nRounding the digits, we produce a publication-ready table. I'm assuming the abbreviated question labels are OK---if not, each could be replaced with its complete assertion. In this form, the rows of the table are in the same order as the rows of the chart---a structure that could be useful to the reader. \n\n\n::: {.cell}\n::: {.cell-output-display}\n|Item                 | Strongly Disagree| Disagree| Neutral| Agree| Strongly Agree|\n|:--------------------|-----------------:|--------:|-------:|-----:|--------------:|\n|Beyond the content   |               6.5|      0.0|    25.8|  38.7|           29.0|\n|Analyze errors       |               6.5|      6.5|    22.6|  45.2|           19.4|\n|Provide facts        |               3.2|      3.2|    16.1|  29.0|           48.4|\n|Develop writing      |               0.0|      6.5|    32.3|  38.7|           22.6|\n|Independent learning |               6.5|      0.0|    19.4|  35.5|           38.7|\n:::\n:::\n\n\nThe values in this table were computed by likert from the fictitious row-record data. The numbers agree with the source data table. \n\n\n\n\n\n\n \n\n\n \n\n\n## Comments\n\nTo comment, a reader has to have a [GitHub](https://github.com/) account. Use the *Sign in with GitHub* button and give permission to the utterances app. \n\n\n\n\n\n\n## Acknowledgments {.appendix}\n\n**R and R packages**\n\n[`R`](https://CRAN.R-project.org/) (version 4.1.2, 2021--11--01)    \n[`data.table`](https://CRAN.R-project.org/package=data.table)  for manipulating data (version 1.14.2)    \n[`distill`](https://CRAN.R-project.org/package=distill)  for creating the post (version 1.3)    \n[`ggplot2`](https://CRAN.R-project.org/package=ggplot2)  for fine-tuning the charts (version 3.3.5)    \n[`likert`](https://CRAN.R-project.org/package=likert)  for manipulating and plotting Likert-style data (version 1.3.6)    \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}