<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Layton R Blog</title>
<link>https://graphdr.github.io/data-stories/index.html</link>
<atom:link href="https://graphdr.github.io/data-stories/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog about visual rhetoric, chart design, and R.</description>
<generator>quarto-0.9.426</generator>
<lastBuildDate>Wed, 09 Mar 2022 05:00:00 GMT</lastBuildDate>
<item>
  <title>Facets that are not small multiples</title>
  <link>https://graphdr.github.io/data-stories/posts/2022-02-19-facets-not-small-multiples/index.html</link>
  <description><![CDATA[ 



<blockquote class="blockquote">
<p>Summary. For data structures having two categorical variables and one quantitative variable, this post illustrates how category independence or dependence influences chart design. Graphs with independent categories (multiway data) are easily created in ggplot2 with the <code>facet_wrap()</code> function; data with dependent categories require <code>facet_grid()</code> with its <code>scales</code> and <code>space</code> arguments to treat unequal vertical scales.</p>
</blockquote>
<p><em>Small multiple</em> design is a good design choice for many data structures. To facilitate visual comparisons, every small-multiple frame (variously called panels, facets, or subplots) has identical scales.</p>
<blockquote class="blockquote">
<p>Small multiples resemble the frames of a movie: a series of graphics, showing the same combination of variables, indexed by changes in another variable. <span class="citation" data-cites="Tufte:1983">[@Tufte:1983, 170]</span></p>
</blockquote>
<p><em>Multiway data</em>—a data structure comprising two independent categorical variables and one quantitative response variable—is well-matched to small multiple design.</p>
<blockquote class="blockquote">
<p>What distinguishes multiway data is the cross-classification of the categorical variables; there is a value of the response for each combination of levels of the two categorical variables <span class="citation" data-cites="Cleveland:1993">[@Cleveland:1993, 303]</span>.</p>
</blockquote>
<p>However, if the categories happen to be <em>dependent</em>, the data are not multiway and the small multiple design fails. Having come across data of this type in a recent article, I thought it would be interesting to illustrate, given one quantitative variable and two categorical variables, how category independence or dependence influences chart design.</p>
<p>I start with a multiway data set and point out that, as a small-multiple design, the panels share common scales. In ggplot2, small multiples are usually created using <code>facet_wrap()</code>.</p>
<p>The second example has data with dependent categories. The panels share a common, horizontal, quantitative scale but have different category scales, yielding facets that are not small multiples. I use <code>facet_grid()</code> with its <code>scales</code> and <code>space</code> arguments to treat the unequal vertical scales.</p>
<p>The R code for the post is listed under the “R code” pointers.</p>
<div class="cell">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># packages used </span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"data.table"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ggplot2"</span>)</span></code></pre></div>
</details>
</div>
<section id="multiway-example" class="level2">
<h2 class="anchored" data-anchor-id="multiway-example">Multiway example</h2>
<p>The literal textbook example of multiway data and chart design is the livestock chart by Cleveland <span class="citation" data-cites="Cleveland:1993">[-@Cleveland:1993, 303]</span>. The data set contains counts of 5 types of farm animals in 26 countries in 1967. The independent categories are country and animal type; the quantitative variable is the count.</p>
<p>I obtained a reproduction of the data from <span class="citation" data-cites="UCLA:2021">[@UCLA:2021]</span> and saved it as a CSV file in the blog data directory.</p>
<div class="cell">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># read the livestock data</span></span>
<span id="cb2-2">DT <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">fread</span>(<span class="st" style="color: #20794D;">"livestock-1967.csv"</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># examine the data</span></span>
<span id="cb2-5">DT[]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>     livestock_type        country    count
             &lt;char&gt;         &lt;char&gt;    &lt;num&gt;
  1:         Cattle        Albania   478000
  2:         Cattle        Austria  2536000
  3:         Cattle        Belgium  3246000
  4:         Cattle       Bulgaria  1796000
  5:         Cattle Czechoslovakia  5131000
 ---                                       
126:          Sheep    Switzerland   336000
127:          Sheep         Turkey 70093000
128:          Sheep United Kingdom 32888000
129:          Sheep  Russia et al. 21000000
130:          Sheep     Yugoslavia  7384000</code></pre>
</div>
</div>
<p>The countries are assigned to the rows such that the median count by country increases from bottom to top. The livestock are assigned to the panels such that median count by livestock type increases in <em>graphical order:</em> increasing from left to right and from bottom to top. The logarithm of counts is used for the quantitative scale counts vary by more than four powers of 10.</p>
<div class="cell" data-fig.asp="6/5">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data =</span> DT, <span class="at" style="color: #657422;">mapping =</span> <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">log10</span>(count), <span class="at" style="color: #657422;">y =</span> <span class="fu" style="color: #4758AB;">reorder</span>(country, count, median))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">geom_point</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="fu" style="color: #4758AB;">vars</span>(<span class="fu" style="color: #4758AB;">reorder</span>(livestock_type, count, median)), <span class="at" style="color: #657422;">as.table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">expression</span>(<span class="st" style="color: #20794D;">'Log'</span>[<span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">'number of livestock'</span>), <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">""</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://graphdr.github.io/data-stories/posts\2022-02-19-facets-not-small-multiples\index_files\figure-html\chart-livestock-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Typical of small multiple charts in general, all five panels have identical horizontal scales (the count) and identical vertical axes (countries). It follows that the size and aspect ratio of each panel are also identical.</p>
</section>
<section id="when-categories-are-dependent" class="level2">
<h2 class="anchored" data-anchor-id="when-categories-are-dependent">When categories are dependent</h2>
<p>The data set that inspired this post is from an article on a creative expression assignment used in a first-year engineering course <span class="citation" data-cites="Chambers+Reid:2021">[@Chambers+Reid:2021]</span>. In response to COVID-19, the course had transitioned from a highly interactive, in-person experience to an asynchronous, online model.</p>
<blockquote class="blockquote">
<p>The instructors designed an assignment to encourage students to creatively express how the course interruption and transition online was affecting them. The assignment encouraged complete freedom of expression and choice of media.</p>
</blockquote>
<p>A data table in the article reports how the student work is coded: 28 creative genres (prose, lyrics, music performance, dance, YouTube, etc.) grouped into 6 media categories (writing, performance, video, graphics, etc.). The quantitative variable is the count of encodings by genre.</p>
<p>Some submissions covered multiple media and genres, for example, an original song in a video would be coded as both. Thus the total of the <code>count</code> column (304 encodings) exceeds the number of submissions (N = 265). The <code>percent</code> column is a derived variable that reports the count as a percentage of N. The sum of the <code>percent</code> column is therefore greater than 100%.</p>
<p>The data are available in the blog data directory.</p>
<div class="cell">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># import the data</span></span>
<span id="cb5-2">DT <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">fread</span>(<span class="st" style="color: #20794D;">"creative-assignment-2021.csv"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;"># print the data table</span></span>
<span id="cb5-5">DT[]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>         medium                 genre count percent
         &lt;char&gt;                &lt;char&gt; &lt;int&gt;   &lt;num&gt;
 1:     Writing                 Prose     6     2.3
 2:     Writing                 Essay    32    12.1
 3:     Writing              Word art     6     2.3
 4:     Writing    Poetry (not haiku)    32    12.1
 5:     Writing                 Haiku     4     1.5
 6:       Music                Lyrics     3     1.1
 7:       Music              Playlist     3     1.1
 8: Performance Music from instrument     6     2.3
 9: Performance  Performance of music     6     2.3
10: Performance                 Dance     2     0.8
11: Performance           Spoken word     2     0.8
12:   Sculpture      Arranged objects     6     2.3
13:   Sculpture             Sculpture     2     0.8
14:   Sculpture                  Lego     2     0.8
15:       Video                TikTok     7     2.6
16:       Video               YouTube     4     1.5
17:       Video            Short-form     9     3.4
18:       Video                 Music     3     1.1
19:       Video           Spoken word     5     1.9
20:    Graphics               Collage    13     4.9
21:    Graphics              Painting    18     6.8
22:    Graphics       Drawing by hand    58    21.9
23:    Graphics   Drawing by computer    10     3.8
24:    Graphics           Photography    15     5.7
25:    Graphics               Cartoon    18     6.8
26:    Graphics                 Emoji     6     2.3
27:    Graphics                  Meme    22     8.3
28:    Graphics            Web design     4     1.5
         medium                 genre count percent</code></pre>
</div>
</div>
<p>The graph I have in mind would have media type assigned to rows and media category assigned to panels. Unlike the livestock example, however, the categorical variables in these data are not independent. For example, web design is associated only with graphics, essay is associated only with writing, etc.</p>
<p>In my first attempt, I use <code>facet_wrap()</code> like I did with the livestock data. The visual problem is obvious…every row has a data marker in one panel only. Because the categories are not independent, the small-multiple design fails.</p>
<div class="cell" data-fig.asp="1.6/1">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># create the first chart </span></span>
<span id="cb7-2">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data =</span> DT, <span class="at" style="color: #657422;">mapping =</span> <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> percent, <span class="at" style="color: #657422;">y =</span> <span class="fu" style="color: #4758AB;">reorder</span>(genre, count))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">geom_point</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="fu" style="color: #4758AB;">vars</span>(<span class="fu" style="color: #4758AB;">reorder</span>(medium, count)) , <span class="at" style="color: #657422;">as.table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;"># display the result</span></span>
<span id="cb7-8">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://graphdr.github.io/data-stories/posts\2022-02-19-facets-not-small-multiples\index_files\figure-html\chart-assignment-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The <code>scales = "free_y"</code> argument of <code>facet_wrap()</code> replaces the common y-scale with only those row labels associated with a panel. I also use the <code>ncol</code> argument to stack the panels in one column with all rows labels aligned on the left. This graph has the essential layout I had in mind—a common quantitative scale but different vertical scales, yielding facets that are not small multiples.</p>
<div class="cell" data-fig.asp="1.5/1">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># edit the previous chart </span></span>
<span id="cb8-2">p <span class="ot" style="color: #003B4F;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-3">   <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="fu" style="color: #4758AB;">vars</span>(<span class="fu" style="color: #4758AB;">reorder</span>(medium, count)) , <span class="at" style="color: #657422;">as.table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free_y"</span>, <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;"># display the result</span></span>
<span id="cb8-6">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://graphdr.github.io/data-stories/posts\2022-02-19-facets-not-small-multiples\index_files\figure-html\chart-assignment-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Because <code>facet_wrap()</code> creates panels of equal height, the rows in this case are unequally spaced.</p>
<p>I switch to <code>facet_grid()</code> to space the rows equally in panels of unequal height. The <code>space = "free_y"</code> argument is added to make the panel height proportional to the length of the y scale.</p>
<div class="cell" data-fig.asp="1/1">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># edit the previous chart </span></span>
<span id="cb9-2">p <span class="ot" style="color: #003B4F;">&lt;-</span> p  <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">facet_grid</span>(<span class="at" style="color: #657422;">rows =</span> <span class="fu" style="color: #4758AB;">vars</span>(<span class="fu" style="color: #4758AB;">reorder</span>(medium, count)), </span>
<span id="cb9-4">             <span class="at" style="color: #657422;">as.table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, </span>
<span id="cb9-5">             <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free_y"</span>,</span>
<span id="cb9-6">             <span class="at" style="color: #657422;">space =</span> <span class="st" style="color: #20794D;">"free_y"</span>)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;"># display the result</span></span>
<span id="cb9-9">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://graphdr.github.io/data-stories/posts\2022-02-19-facets-not-small-multiples\index_files\figure-html\chart-assignment-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="editing-the-chart" class="level2">
<h2 class="anchored" data-anchor-id="editing-the-chart">Editing the chart</h2>
<p>While the overall layout above is what I want, I would prefer to move the panel labels from the right-hand side to the top of each panel. I could not find a way to do that, so I removed the right-hand label and wrote the media label inside the panel. I edited some other aesthetics as well.</p>
<div class="cell" data-fig.asp="1/1">
<details>
<summary>R code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># create a y-coordinate for a text geom</span></span>
<span id="cb10-2">DT <span class="ot" style="color: #003B4F;">&lt;-</span> DT[, y_coord_media <span class="sc" style="color: #5E5E5E;">:</span><span class="er" style="color: #AD0000;">=</span> .N<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">0.5</span>, by <span class="ot" style="color: #003B4F;">=</span> medium]</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;"># create secondary axis data, omit some labels to avoid overprinting</span></span>
<span id="cb10-5">count_scale <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sort</span>(<span class="fu" style="color: #4758AB;">unique</span>(DT<span class="sc" style="color: #5E5E5E;">$</span>count))</span>
<span id="cb10-6">top_axis <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.table</span>(count_scale)</span>
<span id="cb10-7">top_axis[, count_label <span class="sc" style="color: #5E5E5E;">:</span><span class="er" style="color: #AD0000;">=</span> <span class="fu" style="color: #4758AB;">as.character</span>(count_scale)]</span>
<span id="cb10-8">omit_labels <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"3"</span>, <span class="st" style="color: #20794D;">"5"</span>, <span class="st" style="color: #20794D;">"7"</span>, <span class="st" style="color: #20794D;">"9"</span>, <span class="st" style="color: #20794D;">"15"</span>)</span>
<span id="cb10-9">top_axis[count_label <span class="sc" style="color: #5E5E5E;">%chin%</span> omit_labels, count_label <span class="sc" style="color: #5E5E5E;">:</span><span class="er" style="color: #AD0000;">=</span> <span class="st" style="color: #20794D;">""</span>]</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;"># ratio for secondary axis transformation</span></span>
<span id="cb10-12">scale_trans <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sum</span>(DT<span class="sc" style="color: #5E5E5E;">$</span>count) <span class="sc" style="color: #5E5E5E;">/</span> <span class="fu" style="color: #4758AB;">sum</span>(DT<span class="sc" style="color: #5E5E5E;">$</span>percent)</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;"># graph</span></span>
<span id="cb10-15"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data =</span> DT, <span class="at" style="color: #657422;">mapping =</span> <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> percent, <span class="at" style="color: #657422;">y =</span> <span class="fu" style="color: #4758AB;">reorder</span>(genre, count))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-17">  <span class="fu" style="color: #4758AB;">facet_grid</span>(<span class="at" style="color: #657422;">rows =</span> <span class="fu" style="color: #4758AB;">vars</span>(<span class="fu" style="color: #4758AB;">reorder</span>(medium, count)), </span>
<span id="cb10-18">             <span class="at" style="color: #657422;">as.table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, </span>
<span id="cb10-19">             <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free_y"</span>,</span>
<span id="cb10-20">             <span class="at" style="color: #657422;">space =</span> <span class="st" style="color: #20794D;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-21">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Genre encodings (%)"</span>, <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Genre"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-22">  <span class="fu" style="color: #4758AB;">theme_light</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-23">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">strip.text.y =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(), </span>
<span id="cb10-24">        <span class="at" style="color: #657422;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb10-25">        <span class="at" style="color: #657422;">axis.title.y =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">angle =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">hjust =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">vjust =</span> <span class="fl" style="color: #AD0000;">0.5</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-26">  <span class="fu" style="color: #4758AB;">geom_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> <span class="dv" style="color: #AD0000;">24</span>, <span class="at" style="color: #657422;">y =</span> y_coord_media, <span class="at" style="color: #657422;">label =</span> medium, <span class="at" style="color: #657422;">hjust =</span> <span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray50"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-27">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">sec.axis =</span> <span class="fu" style="color: #4758AB;">sec_axis</span>(<span class="at" style="color: #657422;">trans =</span> <span class="cf" style="color: #003B4F;">function</span>(z) (z <span class="sc" style="color: #5E5E5E;">*</span> scale_trans), </span>
<span id="cb10-28">                                         <span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"Count of genre encodings"</span>, </span>
<span id="cb10-29">                                         <span class="at" style="color: #657422;">breaks =</span> top_axis<span class="sc" style="color: #5E5E5E;">$</span>count_scale, </span>
<span id="cb10-30">                                         <span class="at" style="color: #657422;">labels =</span> top_axis<span class="sc" style="color: #5E5E5E;">$</span>count_label))</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://graphdr.github.io/data-stories/posts\2022-02-19-facets-not-small-multiples\index_files\figure-html\chart-assignment-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Features of the graph</p>
<ul>
<li><code>facet_grid()</code> as shown earlier for panels of unequal height with rows equally spaced.</li>
<li><code>geom_text()</code> for panel labels, vertically centered.</li>
<li><code>sec_axis()</code> for a secondary scale along the top of the chart showing counts of genre encodings from the data table.</li>
<li><code>theme_light()</code> for gray lines on white background to focus attention on the data.</li>
<li>All text is oriented horizontally for ease of reading.</li>
<li>Media are ordered by increasing counts (total count rather than median) from bottom to top.</li>
<li>Within a panel, genres are similarly ordered.</li>
</ul>
</section>
<section id="final-thoughts" class="level2">
<h2 class="anchored" data-anchor-id="final-thoughts">Final thoughts</h2>
<p>Regarding their data table, the authors write,</p>
<blockquote class="blockquote">
<p>… some media were selected by large numbers of students, such as drawings by hand or computer, and writing such as poems and essays.</p>
</blockquote>
<p>The graph supports this assertion but emphasizes visually a couple of other points as well. Drawings by hand, essays, and non-haiku poetry were by far the most popular genres (adding up to nearly 50% of the submission encodings) and graphics was by far the most popular medium (about 60% of the encodings).</p>
<p>Mainly this chart gave me a chance to clarify something that my students would sometimes overlook—that a data structure with two categories and one quantitative variable are multiway data if and only if the categories are independent and a value of the response exists for each combination of levels of the two categories. Otherwise, we cannot expect to use a small-multiple design.</p>


</section>

 ]]></description>
  <category>ggplot2</category>
  <category>R</category>
  <guid>https://graphdr.github.io/data-stories/posts/2022-02-19-facets-not-small-multiples/index.html</guid>
  <pubDate>Wed, 09 Mar 2022 05:00:00 GMT</pubDate>
  <media:content url="https://graphdr.github.io/data-stories//posts/2022-02-19-facets-not-small-multiples/thumbnail.png" medium="image" type="image/png" height="125" width="144"/>
</item>
</channel>
</rss>
